# ################################
# Model: LSTM (encoder) + GRU (decoder)
# Authors: Loren Lugosch & Mirco Ravanelli 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data paths
output_folder: !ref results/RNN/<seed>
data_folder: /localscratch/LibriSpeech
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

input_lexicon: !ref <save_folder>/lexicon.csv
oov: !ref <save_folder>/oov.csv
wer_file: !ref <save_folder>/wer.txt
pretrained_path: !ref <save_folder>
enable_interim_reports: True


# These three files are created from lexicon.csv.
build_lexicon: true
data_load: !name:speechbrain.dataio.dataset.DynamicItemDataset.from_csv
train_data: !ref <save_folder>/lexicon_tr.csv
valid_data: !ref <save_folder>/lexicon_dev.csv
test_data: !ref <save_folder>/lexicon_test.csv
skip_prep: False
sorting: random #ascending
graphemes_space_separated: False
phonemes_space_separated: False

# Neural Parameters
batch_size: 1024
lr: 0.002
save_for_pretrained: true

# Model parameters
output_neurons: 41
enc_dropout: 0.5
enc_neurons: 512
enc_num_layers: 4
dec_dropout: 0.5
dec_neurons: 512
dec_att_neurons: 256
dec_num_layers: 4
embedding_dim: 512

# Special Token information
bos_index: 0
eos_index: 0

# Beam Searcher
beam_search_min_decode_ratio: 0
beam_search_max_decode_ratio: 1.35
beam_search_beam_size: 16
beam_search_eos_threshold: 10.0
beam_search_using_max_attn_shift: False
beam_search_max_attn_shift: 10
beam_search_coverage_penalty: 5.0

# Evaluation parameters
eval_dataset: train
eval_train_step: lexicon
eval_batch_size: 256
eval_batch_count: 1
eval_reporting: raw
eval_mode: sentence


select_n_sentences: None

graphemes:
- A
- B
- C
- D
- E
- F
- G
- H
- I
- J
- K
- L
- M
- N
- O
- P
- Q
- R
- S
- T
- U
- V
- W
- X
- Y
- Z
- "'"
- " "

phonemes:
- AA
- AE
- AH
- AO
- AW
- AY
- B
- CH
- D
- DH
- EH
- ER
- EY
- F
- G
- HH
- IH
- IY
- JH
- K
- L
- M
- N
- NG
- OW
- OY
- P
- R
- S
- SH
- T
- TH
- UH
- UW
- V
- W
- Y
- Z
- ZH

dataloader_opts:
    batch_size: !ref <batch_size>

# Models
enc: !new:speechbrain.nnet.RNN.LSTM
    input_shape: [null, null, !ref <embedding_dim>]
    bidirectional: True
    hidden_size: !ref <enc_neurons>
    num_layers: !ref <enc_num_layers>
    dropout: !ref <enc_dropout>

lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>  # 39 phonemes + 1 eos
    bias: False

encoder_emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: 28  # 27 chars + 1 bos
    embedding_dim: !ref <embedding_dim>

emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>  # 39 phonemes + 1 bos
    embedding_dim: !ref <embedding_dim>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
    enc_dim: !ref <enc_neurons> * 2
    input_size: !ref <embedding_dim>
    rnn_type: gru
    attn_type: content
    dropout: !ref <dec_dropout>
    hidden_size: !ref <dec_neurons>
    attn_dim: !ref <dec_att_neurons>
    num_layers: !ref <dec_num_layers>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

modules:
    enc: !ref <enc>
    encoder_emb: !ref <encoder_emb>
    emb: !ref <emb>
    dec: !ref <dec>
    lin: !ref <lin>
    out: !ref <log_softmax>

model: !new:speechbrain.lobes.models.g2p.model.AttentionSeq2Seq
    enc: !ref <enc>
    encoder_emb: !ref <encoder_emb>
    emb: !ref <emb>
    dec: !ref <dec>
    lin: !ref <lin>
    out: !ref <log_softmax>


opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

beam_searcher: !new:speechbrain.decoders.S2SRNNBeamSearcher
    embedding: !ref <emb>
    decoder: !ref <dec>
    linear: !ref <lin>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    min_decode_ratio: !ref <beam_search_min_decode_ratio>
    max_decode_ratio: !ref <beam_search_max_decode_ratio>
    beam_size: !ref <beam_search_beam_size>
    eos_threshold: !ref <beam_search_eos_threshold>
    using_max_attn_shift: !ref <beam_search_using_max_attn_shift>
    max_attn_shift: !ref <beam_search_max_attn_shift>
    coverage_penalty: !ref <beam_search_coverage_penalty>


lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0
    annealing_factor: 0.8
    patient: 0

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

seq_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.nll_loss
        label_smoothing: 0.1
        reduction: batch

per_stats: !name:speechbrain.utils.metric_stats.ErrorRateStats


epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <N_epochs>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        scheduler: !ref <lr_annealing>
        counter: !ref <epoch_counter>

model_output_keys:
    - p_seq
    - char_lens
    - encoder_out

grapheme_encoder: !new:speechbrain.dataio.encoder.TextEncoder
phoneme_encoder: !new:speechbrain.dataio.encoder.TextEncoder

out_phoneme_decoder: !name:speechbrain.lobes.models.g2p.attnrnn.text_decode
    encoder: !ref <phoneme_encoder>


encode_pipeline:
    batch: false
    use_padded_data: true
    output_keys:
        - grapheme_list
        - grapheme_encoded_list
        - grapheme_encoded
    steps:
        - !apply:speechbrain.lobes.models.g2p.attnrnn.clean_pipeline
          graphemes: !ref <graphemes>
        - !apply:speechbrain.lobes.models.g2p.attnrnn.grapheme_pipeline
          takes: txt_cleaned
          graphemes: !ref <graphemes>
          grapheme_encoder: !ref <grapheme_encoder>

decode_pipeline:
    batch: true
    output_keys:
        - phonemes
    steps:
        - !apply:speechbrain.lobes.models.g2p.attnrnn.beam_search_pipeline
          beam_searcher: !ref <beam_searcher>
        - !apply:speechbrain.lobes.models.g2p.attnrnn.phoneme_decoder_pipeline
          phoneme_encoder: !ref <phoneme_encoder>
          phonemes: !ref <phonemes>

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
  loadables:
    model: !ref <model>
  paths:
    model: !ref <pretrained_path>/model.ckpt

train_steps:
  - name: lexicon
    train_data: !ref <train_data>
    valid_data: !ref <valid_data>
    test_data: !ref <test_data>
    epoch_counter: !ref <epoch_counter>
    wer_file: !ref <wer_file>